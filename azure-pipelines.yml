trigger:
- main

variables:
  vmImageName: 'ubuntu-latest'
  tag: '$(Build.BuildId)'
  #ProjetcName: 'sidneyevpereira/unifique:$(Build.BuildId)'  
  ProjetcName: $(Build.Repository.Name)

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)    
    steps: 

    - task: DockerCompose@0
      displayName: Delete old images
      inputs:
        containerregistrytype: 'Container Registry'
        dockerRegistryEndpoint: 'dockerhub'
        dockerComposeFile: '**/docker-compose.yml'
        action: 'Run a Docker Compose command'
        dockerComposeCommand: 'rm -f'

    - task: DockerCompose@0
      displayName: Build services
      inputs:
        containerregistrytype: 'Container Registry'
        dockerRegistryEndpoint: 'dockerhub'
        dockerComposeFile: '**/docker-compose.yml'
        dockerComposeFileArgs: 'DOCKER_BUILD_SOURCE='
        projectName: '$(ProjetcName)'        
        additionalImageTags: $(tag)          
        includeSourceTags: true
        includeLatestTag: true        
        action: 'Build services'
        
    - task: DockerCompose@0
      displayName: Push services
      inputs:
        containerregistrytype: 'Container Registry'
        dockerRegistryEndpoint: 'dockerhub'
        dockerComposeFile: '**/docker-compose.yml'
        dockerComposeFileArgs: 'DOCKER_BUILD_SOURCE='
        projectName: '$(ProjetcName)'        
        additionalImageTags: $(tag)          
        includeSourceTags: true
        includeLatestTag: true       
        action: 'Push services'
      
    #- task: DockerCompose@0
    #  displayName: Build services
    #  inputs:
    #    containerregistrytype: 'Azure Container Registry'
    #    dockerComposeFile: 'docker-compose.yml'
    #    action: 'Build services'
    #    additionalImageTags: '$(Build.BuildId)'        
    #- task: DockerCompose@0
    #  displayName: Build services
    #  inputs:
    #    containerregistrytype: 'Container Registry'
    #    dockerRegistryEndpoint: 'dockerhub'
    #    dockerComposeFile: '**/docker-compose.yml'
    #    action: 'Run a Docker Compose command'
    #    dockerComposeCommand: 'create --force-recreate'    
    #- task: DockerCompose@0
    #  displayName: Push services
    #  inputs:
    #    action: Push services
    #    dockerComposeFile: docker-compose.yml
    #    projectName: $(Build.Repository.Name)
    #    qualifyImageNames: true
    #    additionalImageTags: $(Build.BuildId)

